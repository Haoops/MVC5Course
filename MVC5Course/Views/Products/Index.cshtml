@model IEnumerable<Product>

@{
    ViewBag.Title = "產品資料列表 Day 1";
}

<h2>產品資料列表 Day 1</h2>

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <p>
        @Html.ActionLink("Create New", "Create")
        ｜
        @* 下拉式選單中的第一個值會與 ModelBinding 的值對應 *@
        Is Active：@Html.DropDownList("isActive", null, "-- 是否有效 --", new { onchange = "this.form.submit();" })
        ｜
        Min Price：@Html.TextBox("minPrice", null, new { onchange = "this.form.submit();" })
        ｜
        Max Price：@Html.TextBox("maxPrice", null, new { onchange = "this.form.submit();" })
        ｜
        KeyWord：@Html.TextBox("keyWord", null, new { onchange = "this.form.submit();" })
        @if (!string.IsNullOrEmpty(Convert.ToString(TempData["EditSuccess"])))
        {
            <h3>@TempData["EditSuccess"]</h3>
        }

    </p>
}

@using (Html.BeginForm())
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>

        @*
            products[0].ProductId
            products[0].ProductName
            products[1].ProductId
            products[1].ProductName
        *@

        @{
            var products = Model.ToArray();
        }
        @for (int i = 0; i < products.Length; i++)
        {
            @Html.HiddenFor(modelItem => products[i].ProductId)

            if (ViewBag.SelectedProductId != null && ViewBag.SelectedProductId == products[i].ProductId)
            {
                ViewBag.SelectedProductItem = products[i];
            }

            <tr @if (ViewBag.SelectedProductId != null && ViewBag.SelectedProductId == products[i].ProductId) { @Html.Raw("style='background-color: lightyellow;'")         }>
                <td>
                    @Html.DisplayFor(modelItem => products[i].ProductName)
                </td>
                <td>
                    @Html.EditorFor(modelItem => products[i].Price)
                    @Html.ValidationMessageFor(modelItem => products[i].Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => products[i].Active)
                </td>
                <td>
                    @Html.EditorFor(modelItem => products[i].Stock)
                    @Html.ValidationMessageFor(modelItem => products[i].Stock)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = products[i].ProductId }) |
                    @Html.ActionLink("Details", "Index", new { ProductID = products[i].ProductId, type = "Details" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = products[i].ProductId }) |
                    @Html.ActionLink("OrderLines", "Index", new { ProductID = products[i].ProductId, type = "OrderLines"})
                </td>
            </tr>
        }

    </table>
    <button class="btn btn-primary">批次更新</button>
            }

<hr />

@if (ViewBag.SelectedProductId != null)
{
    if (ViewBag.type == "Details")
    {
        if (ViewData["SelectedProductItem"] != null)
        {
            @Html.Partial("Details", ViewData["SelectedProductItem"])

        }
    }
    else if (ViewBag.type == "OrderLines")
    {
        @Html.Action("Index", "OrderLines", new { ProductId = ViewBag.SelectedProductId })
    }

}